summary()
#par(mar=numeric(4))
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
# Using the 1-SE method
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
#gcform_all=regression formula for all variables due to the fact that unfortunately RESPONSE~. produces errors
gc.ct<-rpart(formula=gcform_reduced,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_reduced,method="class",cp=0.001) %>%
summary()
#par(mar=numeric(4))
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
# Using the 1-SE method
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
#gcform_all=regression formula for all variables due to the fact that unfortunately RESPONSE~. produces errors
gc.ct<-rpart(formula=gcform_reduced,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_reduced,method="class",cp=0.001) %>%
summary()
#par(mar=numeric(4))
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
# Using the 1-SE method
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_all,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_all,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_all,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_all,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
cp<-gc.ct$cptable
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_reduced,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_reduced,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
library(rpart.plot)
rpart.plot(gc.ct1,main="")
CrossTable(SAV_ACCT, RESPONSE, digits=2, max.width = 5, expected=FALSE, prop.r=TRUE, prop.c=TRUE, prop.t=TRUE, prop.chisq=TRUE)
CrossTable(SAV_ACCT, RESPONSE, digits=2, expected=T,prop.chisq=TRUE)
library(rattle)
data(gc)
#loading all necessary libraries
library(Hmisc) #important
library(DescTools) #imp
library(rpart) #imp
library(rpart.plot) #imp
library(ggplot2)
library(lattice)
library(RColorBrewer) #imp.
library(corrplot)
library(psych)
library(GGally)
library(corrr)
library(ggcorrplot)
library(gridExtra)   #imp.
library(grid)     #imp.
library(gmodels)   #imp.
library(nnet)   #imp.
library(magrittr)
gc <- read.csv2("C:/Users/Spörri/Desktop/Marc UniNE/SS 17 Seminar of Applied Statistics/Homework/GermanCredit.csv",dec=".",header=T)
quanti<-c(3,11,23)  #select the columns of the quantitative variables
#I'm considering INSTALL_RATE (var nr. 14), num_credits (27) and num_dependents (29) as a categorial variable, since
#none of these 3 variables has more than 4 ausprägungen, especially num_dependents with only 2 ausprägungen
quali<-1:31
quali<-quali[-quanti]
RESPONSE<-as.factor(gc[,32])
gc.quali<-apply(gc[,quali],2,as.factor)
gc.quali
gc.quali[,8][gc.quali[,8]== -1] <- 1 #cleaning the var. EDUCATION because there was one typing error (obs. 37 with "-1" instead of presumably "1"); "-1" represents no category for this variable
gc.quali[,17][gc.quali[,17]== 2] <- 1 #cleaning the var. GUARANTOR because there was one typing error (obs. 234 with "2" instead of presumably "1"); "2" represents no category for this variable
summary(gc.quali) #summary for qualitative variables
gc.quanti<-gc[,quanti]
gc.quanti
summary(gc.quanti) #summary for the quantitative variables
gc<-cbind(gc.quali,gc.quanti,RESPONSE)
gc
attach(gc)
library(Hmisc) #important
library(DescTools) #imp
library(rpart) #imp
library(rpart.plot) #imp
library(ggplot2)
library(lattice)
library(RColorBrewer) #imp.
library(corrplot)
library(psych)
library(GGally)
library(corrr)
library(ggcorrplot)
library(gridExtra)   #imp.
library(grid)     #imp.
library(gmodels)   #imp.
library(nnet)   #imp.
library(magrittr)
gc <- read.csv2("C:/Users/Spörri/Desktop/Marc UniNE/SS 17 Seminar of Applied Statistics/Homework/GermanCredit.csv",dec=".",header=T)
quanti<-c(3,11,23)  #select the columns of the quantitative variables
#I'm considering INSTALL_RATE (var nr. 14), num_credits (27) and num_dependents (29) as a categorial variable, since
#none of these 3 variables has more than 4 ausprägungen, especially num_dependents with only 2 ausprägungen
quali<-1:31
quali<-quali[-quanti]
RESPONSE<-as.factor(gc[,32])
gc.quali<-apply(gc[,quali],2,as.factor)
gc.quali
gc.quali[,8][gc.quali[,8]== -1] <- 1 #cleaning the var. EDUCATION because there was one typing error (obs. 37 with "-1" instead of presumably "1"); "-1" represents no category for this variable
gc.quali[,17][gc.quali[,17]== 2] <- 1 #cleaning the var. GUARANTOR because there was one typing error (obs. 234 with "2" instead of presumably "1"); "2" represents no category for this variable
summary(gc.quali) #summary for qualitative variables
gc.quanti<-gc[,quanti]
gc.quanti
summary(gc.quanti) #summary for the quantitative variables
gc<-cbind(gc.quali,gc.quanti,RESPONSE)
gc
attach(gc)
##Descriptive Statistics
str(gc)
head(gc)
summary(gc)
summary(RESPONSE~.,data=gc)
describe(gc)
#as_tibble(gc) #not working could not find function "as_tibble"
Desc(gc)
Desc(RESPONSE~.,data=gc)
library(rattle)
data(gc)
gc
data(gc)
str(gc)
head(gc)
tail(gc)
summary(gc)
data<-na.omit(gc)
nobs<-nrow(data)
form<-formula(RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN)
target<-all.vars(form)[1]
vars<- -grep('test',names(data))
target<-all.vars(form)[1]
vars<- -grep('test',names(data))
set.seed(33)
train<-sample(nobs,0.7*nobs) #selecting 70% of all
train
library(randomForest)
gcRF<-randomForest(formula=form, data=data[train,vars],
ntree=500,mtry=4, #we try 4 variables
importance=TRUE, #information about which variables are important
localImp=TRUE,
na.action=na.roughfix, #imputes missing values
replace=FALSE)
gcRF
print(gcRF) #confusion matrix: rows= reality, columns = predicted
head(round(importance(gcRF),2)) #most important variables?
varImpPlot(gcRF)   #use
round(head(gcRF$err.rate,15),4)
plot(gcRF)   #use shows the change in errora rate as more trees are added to the forest. we can see that after
round(head(gcRF$err.rate,15),4)
plot(gcRF)   #use shows the change in errora rate as more trees are added to the forest. we can see that after
head(gcRF$votes)
head(apply(gcRF$votes,1,sum))
gcRF$confusion #use  #same as print(gcRF)?
gcRF$confusion #use  #same as print(gcRF)?
library(gmodels)
vars.pred=-grep('test2', names(data))
vars.pred
gc.pred=predict(gcRF,data[-train,vars.pred], type="class")
gc.pred
CrossTable(x=data$RESPONSE[-train],y=gc.pred, prop.chisq=F)
library(rpart)
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_reduced,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_reduced,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ OBS.+CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_reduced,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_reduced,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
gcform_reduced=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+RADIO.TV+EDUCATION+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_SINGLE+CO.APPLICANT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+FOREIGN
gcform_all=RESPONSE ~ CHK_ACCT+DURATION+HISTORY+NEW_CAR+USED_CAR+FURNITURE+RADIO.TV+EDUCATION+RETRAINING+AMOUNT+SAV_ACCT+EMPLOYMENT+INSTALL_RATE+MALE_DIV+MALE_SINGLE+MALE_MAR_or_WID+CO.APPLICANT+GUARANTOR+PRESENT_RESIDENT+REAL_ESTATE+PROP_UNKN_NONE+AGE+OTHER_INSTALL+RENT+OWN_RES+JOB+NUM_DEPENDENTS+TELEPHONE+FOREIGN
gc.ct<-rpart(formula=gcform_all,method="class",data=gc,cp=0.001)
print(gc.ct)
summary(gc.ct)
gc.ct<-gc %>%
rpart(formula=gcform_all,method="class",cp=0.001) %>%
summary()
par(mar=c(0.5, 1, 0.5, 1))
plot(gc.ct,uniform=TRUE)
text(gc.ct,use.n=TRUE,all=TRUE,cex=0.6)
options(digits=5)
printcp(gc.ct)
plotcp(gc.ct)
cp<-gc.ct$cptable
opt<-which.min(gc.ct$cptable[,"xerror"])
r<-cp[, 4][opt]+cp[, 5][opt]
rmin<-min(seq(1:dim(cp)[1])[cp[, 4] < r])
cp0<-cp[rmin,1]
cat("size chosen was",cp[rmin,2]+1,"\n")
gc.ct1<-prune(gc.ct,cp=1.01*cp0)
summary(gc.ct1)
x<-factor(predict(gc.ct1,type="class"))
table(true=RESPONSE,predicted=x)
library(gmodels)
gc.pred<-predict(gc.ct1,type="class")
CrossTable(x = RESPONSE, y = gc.pred, prop.chisq=FALSE)
plot(gc.ct1,branch=0.4,uniform=TRUE)
text(gc.ct1,digits=3,use.n=TRUE,cex=0.6)
library(rpart.plot)
rpart.plot(gc.ct1,main="")
prp(gc.ct1,main="",type=4,extra=4,faclen=0)
rpart.plot(gc.ct1,main="",extra=104,under=TRUE,faclen=0)
cols<-ifelse(gc.ct1$frame$yval,"green4","darkred")
prp(gc.ct1
,main="CART model tree"
,extra=104           # display prob and percent of obs
,nn=TRUE             # display the node numbers
,fallen.leaves=TRUE  # put the leaves on the bottom of the page
,branch=.5           # change angle of branch lines
,faclen=0            # do not abbreviate factor levels
,trace=1             # print the automatically calculated cex
,shadow.col="gray"   # shadows under the leaves
,branch.lty=3        # draw branches using dotted lines
,split.cex=1.2       # make the split text larger than the node text
,split.prefix="is "  # put "is " before split text
,split.suffix="?"    # put "?" after split text
,col=cols, border.col=cols   # green if survived
,split.box.col="lightgray"   # lightgray split boxes (default is white)
,split.border.col="darkgray" # darkgray border on split boxes
,split.round=.5)
library(partykit)
plot(as.party(gc.ct1),tp_args = list(id = FALSE))
library(rattle)
